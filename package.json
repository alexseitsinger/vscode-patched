{
  "name": "vscode-patched",
  "displayName": "Patched",
  "description": "Integrates Patched into VS Code.",
  "version": "2.1.1",
  "author": "Alex Seitsinger",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/alexseitsinger/vscode-patched.git"
  },
  "bugs": {
    "url": "https://github.com/alexseitsinger/vscode-patched/issues"
  },
  "publisher": "alexseitsinger",
  "icon": "eslint_icon.png",
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.41.0"
  },
  "activationEvents": [
    "*"
  ],
  "main": "./client/out/extension",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Patched",
      "properties": {
        "patched.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Controls whether Patched is enabled for JavaScript files or not."
        },
        "patched.packageManager": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "npm",
            "yarn",
            "pnpm"
          ],
          "default": "npm",
          "description": "The package manager you use to install node modules."
        },
        "patched.alwaysShowStatus": {
          "type": "boolean",
          "default": false,
          "description": "Always show the Patched status bar item.",
          "scope": "window"
        },
        "patched.nodePath": {
          "scope": "resource",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "A path added to NODE_PATH when resolving the Patched module."
        },
        "patched.options": {
          "scope": "resource",
          "type": "object",
          "default": {},
          "description": "The Patched options object to provide args normally passed to  when executed from a command line."
        },
        "patched.trace.server": {
          "scope": "window",
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "off",
                "messages",
                "verbose"
              ],
              "default": "off"
            },
            {
              "type": "object",
              "properties": {
                "verbosity": {
                  "type": "string",
                  "enum": [
                    "off",
                    "messages",
                    "verbose"
                  ],
                  "default": "off"
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json"
                  ],
                  "default": "text"
                }
              }
            }
          ],
          "default": "off",
          "description": "Traces the communication between VSCode and the Patched linter service."
        },
        "patched.run": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "onSave",
            "onType"
          ],
          "default": "onType",
          "description": "Run the linter on save (onSave) or on type (onType)"
        },
        "patched.autoFixOnSave": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Turns auto fix on save on or off.",
          "deprecationMessage": "The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.patched member."
        },
        "patched.quiet": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Turns on quiet mode, which ignores warnings."
        },
        "patched.onIgnoredFiles": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "warn",
            "off"
          ],
          "default": "off",
          "description": "Whether Patched should issue a warning on ignored files."
        },
        "patched.migration.2_x": {
          "scope": "application",
          "type": "string",
          "enum": [
            "off",
            "on"
          ],
          "default": "on",
          "description": "Whether Patched should migrate auto fix on save settings."
        },
        "patched.workingDirectories": {
          "scope": "resource",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "location"
                    ]
                  },
                  "default": "location"
                },
                "required": [
                  "mode"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "directory": {
                    "type": "string",
                    "description": "The working directory to use if a file's path starts with this directory."
                  },
                  "changeProcessCWD": {
                    "type": "boolean",
                    "description": "Whether the process's cwd should be changed as well."
                  }
                },
                "deprecationMessage": "Use the new !cwd form.",
                "required": [
                  "directory"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "directory": {
                    "type": "string",
                    "description": "The working directory to use if a file's path starts with this directory."
                  },
                  "!cwd": {
                    "type": "boolean",
                    "description": "Set to true if ESLint shouldn't change the working directory."
                  }
                },
                "required": [
                  "directory"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "pattern": {
                    "type": "string",
                    "description": "A glob pattern to match a working directory."
                  },
                  "!cwd": {
                    "type": "boolean",
                    "description": "Set to true if Patched shouldn't change the working directory."
                  }
                },
                "required": [
                  "pattern"
                ]
              }
            ]
          }
        },
        "patched.validate": {
          "scope": "resource",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string",
                    "description": "The language id to be validated by Patched."
                  },
                  "autoFix": {
                    "type": "boolean",
                    "description": "Whether auto fixes are provided for the language."
                  }
                },
                "deprecationMessage": "Auto Fix is enabled by default. Use the single string form."
              }
            ]
          },
          "description": "An array of language ids which should be validated by Patched. If not installed Patched will show an error."
        },
        "patched.probe": {
          "scope": "resource",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "javascript",
            "javascriptreact",
            "typescript",
            "typescriptreact",
            "html",
            "vue",
            "markdown"
          ],
          "description": "An array of language ids for which the extension should probe if support is installed."
        },
        "patched.provideLintTask": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "deprecationMessage": "This option is deprecated. Use patched.lintTask.enable instead.",
          "description": "Controls whether a task for linting the whole workspace will be available."
        },
        "patched.lintTask.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Controls whether a task for linting the whole workspace will be available."
        },
        "patched.lintTask.options": {
          "scope": "resource",
          "type": "string",
          "default": ".",
          "description": "Command line options applied when running the task for linting the whole workspace"
        },
        "patched.runtime": {
          "scope": "machine",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The location of the node binary to run Patched under."
        },
        "patched.debug": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "Enables Patched debug mode (same as --debug on the command line)"
        },
        "patched.codeAction.disableRuleComment": {
          "scope": "resource",
          "type": "object",
          "default": {
            "enable": true,
            "location": "separateLine"
          },
          "properties": {
            "enable": {
              "type": "boolean",
              "default": true,
              "description": "Show the disable code actions."
            },
            "location": {
              "type": "string",
              "enum": [
                "separateLine",
                "sameLine"
              ],
              "default": "separateLine",
              "description": "Configure the disable rule code action to insert the comment on the same line or a new line."
            }
          }
        },
        "patched.codeAction.showDocumentation": {
          "scope": "resource",
          "type": "object",
          "default": {
            "enable": true
          },
          "properties": {
            "enable": {
              "type": "boolean",
              "default": true,
              "description": "Show the documentation code actions."
            }
          }
        },
        "patched.codeActionsOnSave.mode": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "all",
            "problems"
          ],
          "enumDescriptions": [
            "Fixes all possible problems in the file. This option might take some time.",
            "Only fixes reported problems that have non overlapping textual edits. This options runs a lot faster."
          ],
          "default": "all",
          "description": "Specifies the code action mode. Possible values are 'all' and 'problems'."
        },
        "patched.format.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Enables Patched as a formatter."
        }
      }
    },
    "commands": [
      {
        "title": "Fix all auto-fixable Problems",
        "category": "Patched",
        "command": "patched.executeAutofix"
      },
      {
        "title": "Create Patched configuration",
        "category": "Patched",
        "command": "patched.createConfig"
      },
      {
        "title": "Enable Patched",
        "category": "Patched",
        "command": "patched.enable"
      },
      {
        "title": "Disable Patched",
        "category": "Patched",
        "command": "patched.disable"
      },
      {
        "title": "Show Output Channel",
        "category": "Patched",
        "command": "patched.showOutputChannel"
      },
      {
        "title": "Migrate Settings",
        "category": "Patched",
        "command": "patched.migrateSettings"
      }
    ],
    "taskDefinitions": [
      {
        "type": "patched"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "./package-json-schema.json"
      }
    ],
    "languages": [
      {
        "id": "ignore",
        "filenames": [
          ".patchedignore"
        ]
      },
      {
        "id": "jsonc",
        "filenames": [
          ".patchedrc.json"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run webpack",
    "webpack": "npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
    "webpack:dev": "npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js",
    "compile": "tsc -b",
    "compile:client": "tsc -b ./client/tsconfig.json",
    "compile:server": "tsc -b ./server/tsconfig.json",
    "watch": "tsc -b -w",
    "lint": "npm run lint:client && npm run lint:server",
    "lint:client": "eslint --config ./client/.eslintrc.json ./client/src/*.ts",
    "lint:server": "eslint --config ./server/.eslintrc.json ./server/src/*.ts",
    "clean": "rimraf client/out && rimraf server/out",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd .."
  },
  "devDependencies": {
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.12.6",
    "@typescript-eslint/parser": "^2.6.1",
    "eslint": "^6.6.0",
    "merge-options": "^2.0.0",
    "mocha": "^6.2.2",
    "rimraf": "^3.0.0",
    "ts-loader": "^6.2.1",
    "typescript": "^3.7.4",
    "vscode": "^1.1.36",
    "vscode-languageclient": "6.1.0",
    "vscode-languageserver": "^6.1.1",
    "vscode-languageserver-textdocument": "^1.0.1",
    "vscode-uri": "^2.1.1",
    "webpack": "^4.41.2",
    "webpack-cli": "^3.3.10"
  }
}
